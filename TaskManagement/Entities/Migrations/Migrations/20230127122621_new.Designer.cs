// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TaskManagement.Models;

namespace TaskManagement.Migrations
{
    [DbContext(typeof(TaskManagementContext))]
    [Migration("20230127122621_new")]
    partial class @new
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("TaskManagement.Models.RefSet", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Key")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UpdatedId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("RefSet");

                    b.HasData(
                        new
                        {
                            Id = new Guid("1966d5cb-a92b-4ee9-9e5c-de08c2f7025b"),
                            CreatedDate = new DateTime(2023, 1, 27, 17, 56, 20, 557, DateTimeKind.Local).AddTicks(8036),
                            CreatedId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Description = "priority",
                            IsActive = true,
                            Key = "PRIORITY",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedId = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("3b61dc28-b562-4153-a302-97866324806c"),
                            CreatedDate = new DateTime(2023, 1, 27, 17, 56, 20, 557, DateTimeKind.Local).AddTicks(8188),
                            CreatedId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Description = "status",
                            IsActive = true,
                            Key = "STATUS",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedId = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("e28e09d8-76f8-43ba-be0b-d7eade3b1e6b"),
                            CreatedDate = new DateTime(2023, 1, 27, 17, 56, 20, 557, DateTimeKind.Local).AddTicks(8198),
                            CreatedId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Description = "remainder",
                            IsActive = true,
                            Key = "REMINDER_PERIOD",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedId = new Guid("00000000-0000-0000-0000-000000000000")
                        });
                });

            modelBuilder.Entity("TaskManagement.Models.RefTerm", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Key")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UpdatedId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("RefTerm");

                    b.HasData(
                        new
                        {
                            Id = new Guid("246b7c06-f7b8-49e6-873c-fcc337c2056a"),
                            CreatedDate = new DateTime(2023, 1, 27, 17, 56, 20, 547, DateTimeKind.Local).AddTicks(6880),
                            CreatedId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Description = "high",
                            IsActive = true,
                            Key = "HIGH",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedId = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("65a9194f-6e36-4451-ac6b-f8c3e2f2a794"),
                            CreatedDate = new DateTime(2023, 1, 27, 17, 56, 20, 549, DateTimeKind.Local).AddTicks(6809),
                            CreatedId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Description = "medium",
                            IsActive = true,
                            Key = "MEDIUM",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedId = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("d2c7f6ed-174f-4782-8207-ca847cb5e5ad"),
                            CreatedDate = new DateTime(2023, 1, 27, 17, 56, 20, 549, DateTimeKind.Local).AddTicks(6894),
                            CreatedId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Description = "low",
                            IsActive = true,
                            Key = "LOW",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedId = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("031feee7-02c4-43f7-9269-b777ae5558d4"),
                            CreatedDate = new DateTime(2023, 1, 27, 17, 56, 20, 549, DateTimeKind.Local).AddTicks(6909),
                            CreatedId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Description = "open",
                            IsActive = true,
                            Key = "OPEN",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedId = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("5443d3e4-1cc2-49f9-af36-ec46c00c8844"),
                            CreatedDate = new DateTime(2023, 1, 27, 17, 56, 20, 549, DateTimeKind.Local).AddTicks(6920),
                            CreatedId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Description = "inprogress",
                            IsActive = true,
                            Key = "INPROGRESS",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedId = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("09cd2a9b-a3ef-4487-a37c-e076569cf752"),
                            CreatedDate = new DateTime(2023, 1, 27, 17, 56, 20, 549, DateTimeKind.Local).AddTicks(6938),
                            CreatedId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Description = "completed",
                            IsActive = true,
                            Key = "COMPLETED",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedId = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("9e5464cf-5729-48b4-8a73-8e3fcefa4ae2"),
                            CreatedDate = new DateTime(2023, 1, 27, 17, 56, 20, 549, DateTimeKind.Local).AddTicks(6948),
                            CreatedId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Description = "3 days",
                            IsActive = true,
                            Key = "3_DAYS",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedId = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("cd2a89f8-dd1a-4a62-8802-1ec27c2c3980"),
                            CreatedDate = new DateTime(2023, 1, 27, 17, 56, 20, 549, DateTimeKind.Local).AddTicks(6957),
                            CreatedId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Description = "7 days",
                            IsActive = true,
                            Key = "7_DAYS",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedId = new Guid("00000000-0000-0000-0000-000000000000")
                        });
                });

            modelBuilder.Entity("TaskManagement.Models.SetRefTerm", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<Guid>("RefSetId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RefTermId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UpdatedId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("RefSetId");

                    b.HasIndex("RefTermId");

                    b.ToTable("SetRefTerm");

                    b.HasData(
                        new
                        {
                            Id = new Guid("953b4148-1ea5-4a18-94d9-c7ac420114ac"),
                            CreatedDate = new DateTime(2023, 1, 27, 17, 56, 20, 556, DateTimeKind.Local).AddTicks(8173),
                            CreatedId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsActive = true,
                            RefSetId = new Guid("1966d5cb-a92b-4ee9-9e5c-de08c2f7025b"),
                            RefTermId = new Guid("246b7c06-f7b8-49e6-873c-fcc337c2056a"),
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedId = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("3422f08e-46aa-4d7f-a0b8-7f5891e279bf"),
                            CreatedDate = new DateTime(2023, 1, 27, 17, 56, 20, 556, DateTimeKind.Local).AddTicks(8330),
                            CreatedId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsActive = true,
                            RefSetId = new Guid("1966d5cb-a92b-4ee9-9e5c-de08c2f7025b"),
                            RefTermId = new Guid("65a9194f-6e36-4451-ac6b-f8c3e2f2a794"),
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedId = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("7a9f9cc6-520c-4bf8-b663-87c7968e65ff"),
                            CreatedDate = new DateTime(2023, 1, 27, 17, 56, 20, 556, DateTimeKind.Local).AddTicks(8344),
                            CreatedId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsActive = true,
                            RefSetId = new Guid("1966d5cb-a92b-4ee9-9e5c-de08c2f7025b"),
                            RefTermId = new Guid("d2c7f6ed-174f-4782-8207-ca847cb5e5ad"),
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedId = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("e5fefc85-5e26-48b6-a57d-7dcc6f399644"),
                            CreatedDate = new DateTime(2023, 1, 27, 17, 56, 20, 556, DateTimeKind.Local).AddTicks(8355),
                            CreatedId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsActive = true,
                            RefSetId = new Guid("3b61dc28-b562-4153-a302-97866324806c"),
                            RefTermId = new Guid("031feee7-02c4-43f7-9269-b777ae5558d4"),
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedId = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("c8166cc9-8343-4ade-a08b-a5f955379ebd"),
                            CreatedDate = new DateTime(2023, 1, 27, 17, 56, 20, 556, DateTimeKind.Local).AddTicks(8365),
                            CreatedId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsActive = true,
                            RefSetId = new Guid("3b61dc28-b562-4153-a302-97866324806c"),
                            RefTermId = new Guid("5443d3e4-1cc2-49f9-af36-ec46c00c8844"),
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedId = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("d90e89dc-ca27-4b0e-9f02-f62d1642f31c"),
                            CreatedDate = new DateTime(2023, 1, 27, 17, 56, 20, 556, DateTimeKind.Local).AddTicks(8381),
                            CreatedId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsActive = true,
                            RefSetId = new Guid("3b61dc28-b562-4153-a302-97866324806c"),
                            RefTermId = new Guid("09cd2a9b-a3ef-4487-a37c-e076569cf752"),
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedId = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("8ae5de6a-eefc-4005-93d5-d8734aca93bc"),
                            CreatedDate = new DateTime(2023, 1, 27, 17, 56, 20, 556, DateTimeKind.Local).AddTicks(8390),
                            CreatedId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsActive = true,
                            RefSetId = new Guid("e28e09d8-76f8-43ba-be0b-d7eade3b1e6b"),
                            RefTermId = new Guid("9e5464cf-5729-48b4-8a73-8e3fcefa4ae2"),
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedId = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("e0557501-ad15-4180-9e0b-744c98340c99"),
                            CreatedDate = new DateTime(2023, 1, 27, 17, 56, 20, 556, DateTimeKind.Local).AddTicks(8418),
                            CreatedId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsActive = true,
                            RefSetId = new Guid("e28e09d8-76f8-43ba-be0b-d7eade3b1e6b"),
                            RefTermId = new Guid("cd2a89f8-dd1a-4a62-8802-1ec27c2c3980"),
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedId = new Guid("00000000-0000-0000-0000-000000000000")
                        });
                });

            modelBuilder.Entity("TaskManagement.Models.TaskAssigneeMapping", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AssigneeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<Guid>("TaskId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("TasksId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UpdatedId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("TasksId");

                    b.ToTable("TaskAssigneeMapping");
                });

            modelBuilder.Entity("TaskManagement.Models.Tasks", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Assigner")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DueDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ParentTaskId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Priority")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ReminderPeriodId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("Status")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UpdatedId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Tasks");
                });

            modelBuilder.Entity("TaskManagement.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UpdatedId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("User");

                    b.HasData(
                        new
                        {
                            Id = new Guid("18c7e0aa-45ef-411f-b9e4-a5d72dbd0e73"),
                            CreatedDate = new DateTime(2023, 1, 27, 17, 56, 20, 565, DateTimeKind.Local).AddTicks(9820),
                            CreatedId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Email = "psurya@gmail.com",
                            IsActive = true,
                            Password = "o4UhjEI94IFLPSGjPrdplj3C1Z9g+z7tDY3/2ZedF1c=",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedId = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("08757d54-7892-4064-934b-886a31d5f783"),
                            CreatedDate = new DateTime(2023, 1, 27, 17, 56, 20, 566, DateTimeKind.Local).AddTicks(1025),
                            CreatedId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Email = @"
test@gmail.com",
                            IsActive = true,
                            Password = "o4UhjEI94IFLPSGjPrdplj3C1Z9g+z7tDY3/2ZedF1c=",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedId = new Guid("00000000-0000-0000-0000-000000000000")
                        });
                });

            modelBuilder.Entity("TaskManagement.Models.SetRefTerm", b =>
                {
                    b.HasOne("TaskManagement.Models.RefSet", "RefSet")
                        .WithMany()
                        .HasForeignKey("RefSetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TaskManagement.Models.RefTerm", "RefTerm")
                        .WithMany()
                        .HasForeignKey("RefTermId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TaskManagement.Models.TaskAssigneeMapping", b =>
                {
                    b.HasOne("TaskManagement.Models.Tasks", null)
                        .WithMany("TaskMapAssignee")
                        .HasForeignKey("TasksId");
                });
#pragma warning restore 612, 618
        }
    }
}
